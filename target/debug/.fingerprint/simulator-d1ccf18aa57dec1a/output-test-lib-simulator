{"message":"unused import: `crate::game::TimeManager`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\card_gen\\card_gen.rs","byte_start":6754,"byte_end":6778,"line_start":226,"line_end":226,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"    use crate::game::TimeManager;","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\card_gen\\card_gen.rs","byte_start":6750,"byte_end":6779,"line_start":226,"line_end":226,"column_start":5,"column_end":34,"is_primary":true,"text":[{"text":"    use crate::game::TimeManager;","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `crate::game::TimeManager`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\card_gen\\card_gen.rs:226:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m226\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use crate::game::TimeManager;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `std::rc::Rc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\deck\\card.rs","byte_start":18,"byte_end":29,"line_start":2,"line_end":2,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"use std::rc::Rc;","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\deck\\card.rs","byte_start":14,"byte_end":30,"line_start":2,"line_end":2,"column_start":1,"column_end":17,"is_primary":true,"text":[{"text":"use std::rc::Rc;","highlight_start":1,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::rc::Rc`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\deck\\card.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::rc::Rc;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `card`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\zone\\zone.rs","byte_start":25,"byte_end":29,"line_start":2,"line_end":2,"column_start":12,"column_end":16,"is_primary":true,"text":[{"text":"    deck::{card, Card, Cards},","highlight_start":12,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\zone\\zone.rs","byte_start":25,"byte_end":31,"line_start":2,"line_end":2,"column_start":12,"column_end":18,"is_primary":true,"text":[{"text":"    deck::{card, Card, Cards},","highlight_start":12,"highlight_end":18}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `card`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\zone\\zone.rs:2:12\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    deck::{card, Card, Cards},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\n\n"}
{"message":"this function takes 7 arguments but 6 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src\\card_gen\\card_gen.rs","byte_start":1060,"byte_end":1115,"line_start":31,"line_end":31,"column_start":9,"column_end":64,"is_primary":false,"text":[{"text":"        |card: &Card, game: &mut Game| -> Result<(), Exception> { Ok(()) },","highlight_start":9,"highlight_end":64}],"label":"the found closure","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\card_gen\\card_gen.rs","byte_start":1151,"byte_end":1295,"line_start":33,"line_end":40,"column_start":14,"column_end":6,"is_primary":false,"text":[{"text":"    Card::new(","highlight_start":14,"highlight_end":15},{"text":"        CardType::Unit,","highlight_start":1,"highlight_end":24},{"text":"        uuid,","highlight_start":1,"highlight_end":14},{"text":"        \"Hieda no Akyuu\".into(),","highlight_start":1,"highlight_end":33},{"text":"        bvs,","highlight_start":1,"highlight_end":13},{"text":"        card_json.clone(),","highlight_start":1,"highlight_end":27},{"text":"        Some(run),","highlight_start":1,"highlight_end":19},{"text":"    )","highlight_start":1,"highlight_end":6}],"label":"an argument of type `std::option::Option<std::rc::Rc<std::cell::RefCell<(dyn for<'a, 'b> FnMut(&'a card::Card, &'b mut game::game::Game) -> Result<(), exception::exception::Exception> + 'static)>>>` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\card_gen\\card_gen.rs","byte_start":1142,"byte_end":1151,"line_start":33,"line_end":33,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    Card::new(","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected `usize`, found enum `Option`","code":null,"level":"note","spans":[{"file_name":"src\\card_gen\\card_gen.rs","byte_start":1278,"byte_end":1287,"line_start":39,"line_end":39,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        Some(run),","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"expected type `usize`\n   found enum `std::option::Option<std::rc::Rc<std::cell::RefCell<[closure@src\\card_gen\\card_gen.rs:31:9: 31:64]>>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src\\deck\\card.rs","byte_start":1632,"byte_end":1651,"line_start":57,"line_end":57,"column_start":9,"column_end":28,"is_primary":false,"text":[{"text":"        card_type: CardType,","highlight_start":9,"highlight_end":28}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\deck\\card.rs","byte_start":1661,"byte_end":1671,"line_start":58,"line_end":58,"column_start":9,"column_end":19,"is_primary":false,"text":[{"text":"        uuid: UUID,","highlight_start":9,"highlight_end":19}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\deck\\card.rs","byte_start":1681,"byte_end":1693,"line_start":59,"line_end":59,"column_start":9,"column_end":21,"is_primary":false,"text":[{"text":"        name: String,","highlight_start":9,"highlight_end":21}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\deck\\card.rs","byte_start":1703,"byte_end":1732,"line_start":60,"line_end":60,"column_start":9,"column_end":38,"is_primary":false,"text":[{"text":"        behavior_table: Vec<Behavior>,","highlight_start":9,"highlight_end":38}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\deck\\card.rs","byte_start":1742,"byte_end":1761,"line_start":61,"line_end":61,"column_start":9,"column_end":28,"is_primary":false,"text":[{"text":"        card_json: CardJson,","highlight_start":9,"highlight_end":28}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\deck\\card.rs","byte_start":1771,"byte_end":1783,"line_start":62,"line_end":62,"column_start":9,"column_end":21,"is_primary":false,"text":[{"text":"        count: usize,","highlight_start":9,"highlight_end":21}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\deck\\card.rs","byte_start":1793,"byte_end":1815,"line_start":63,"line_end":63,"column_start":9,"column_end":31,"is_primary":false,"text":[{"text":"        runner: Option<Runner>,","highlight_start":9,"highlight_end":31}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\deck\\card.rs","byte_start":1619,"byte_end":1622,"line_start":56,"line_end":56,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src\\card_gen\\card_gen.rs","byte_start":1151,"byte_end":1295,"line_start":33,"line_end":40,"column_start":14,"column_end":6,"is_primary":true,"text":[{"text":"    Card::new(","highlight_start":14,"highlight_end":15},{"text":"        CardType::Unit,","highlight_start":1,"highlight_end":24},{"text":"        uuid,","highlight_start":1,"highlight_end":14},{"text":"        \"Hieda no Akyuu\".into(),","highlight_start":1,"highlight_end":33},{"text":"        bvs,","highlight_start":1,"highlight_end":13},{"text":"        card_json.clone(),","highlight_start":1,"highlight_end":27},{"text":"        Some(run),","highlight_start":1,"highlight_end":19},{"text":"    )","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":"(CardType::Unit, uuid, \"Hieda no Akyuu\".into(), bvs, card_json.clone(), /* usize */, /* std::option::Option<std::rc::Rc<std::cell::RefCell<(dyn for<'a, 'b> FnMut(&'a card::Card, &'b mut game::game::Game) -> Result<(), exception::exception::Exception> + 'static)>>> */)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: this function takes 7 arguments but 6 arguments were supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\card_gen\\card_gen.rs:33:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        |card: &Card, game: &mut Game| -> Result<(), Exception> { Ok(()) },\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mthe found closure\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    ));\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    Card::new(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m_____\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        CardType::Unit,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        uuid,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        \"Hieda no Akyuu\".into(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Some(run),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    )\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|_____-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14man argument of type `std::option::Option<std::rc::Rc<std::cell::RefCell<(dyn for<'a, 'b> FnMut(&'a card::Card, &'b mut game::game::Game) -> Result<(), exception::exception::Exception> + 'static)>>>` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: expected `usize`, found enum `Option`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\card_gen\\card_gen.rs:39:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Some(run),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected type `\u001b[0m\u001b[0m\u001b[1musize\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m              found enum `\u001b[0m\u001b[0m\u001b[1mstd::option::Option<std::rc::Rc<std::cell::RefCell<[closure@src\\card_gen\\card_gen.rs:31:9: 31:64]>>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\deck\\card.rs:56:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        card_type: CardType,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        uuid: UUID,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        name: String,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        behavior_table: Vec<Behavior>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        card_json: CardJson,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        count: usize,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        runner: Option<Runner>,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    Card::new\u001b[0m\u001b[0m\u001b[38;5;10m(CardType::Unit, uuid, \"Hieda no Akyuu\".into(), bvs, card_json.clone(), /* usize */, /* std::option::Option<std::rc::Rc<std::cell::RefCell<(dyn for<'a, 'b> FnMut(&'a card::Card, &'b mut game::game::Game) -> Result<(), exception::exception::Exception> + 'static)>>> */)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"message":"this function takes 7 arguments but 6 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"src\\card_gen\\card_gen.rs","byte_start":7770,"byte_end":7825,"line_start":252,"line_end":252,"column_start":13,"column_end":68,"is_primary":false,"text":[{"text":"            |card: &Card, game: &mut Game| -> Result<(), Exception> {","highlight_start":13,"highlight_end":68}],"label":"the found closure","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\card_gen\\card_gen.rs","byte_start":8049,"byte_end":8221,"line_start":260,"line_end":267,"column_start":18,"column_end":10,"is_primary":false,"text":[{"text":"        Card::new(","highlight_start":18,"highlight_end":19},{"text":"            CardType::Unit,","highlight_start":1,"highlight_end":28},{"text":"            uuid,","highlight_start":1,"highlight_end":18},{"text":"            \"Hieda no Akyuu\".into(),","highlight_start":1,"highlight_end":37},{"text":"            bvs,","highlight_start":1,"highlight_end":17},{"text":"            card_json.clone(),","highlight_start":1,"highlight_end":31},{"text":"            Some(run),","highlight_start":1,"highlight_end":23},{"text":"        )","highlight_start":1,"highlight_end":10}],"label":"an argument of type `std::option::Option<std::rc::Rc<std::cell::RefCell<(dyn for<'a, 'b> FnMut(&'a card::Card, &'b mut game::game::Game) -> Result<(), exception::exception::Exception> + 'static)>>>` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\card_gen\\card_gen.rs","byte_start":8040,"byte_end":8049,"line_start":260,"line_end":260,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        Card::new(","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected `usize`, found enum `Option`","code":null,"level":"note","spans":[{"file_name":"src\\card_gen\\card_gen.rs","byte_start":8200,"byte_end":8209,"line_start":266,"line_end":266,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"            Some(run),","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"expected type `usize`\n   found enum `std::option::Option<std::rc::Rc<std::cell::RefCell<[closure@src\\card_gen\\card_gen.rs:252:13: 252:68]>>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"src\\deck\\card.rs","byte_start":1632,"byte_end":1651,"line_start":57,"line_end":57,"column_start":9,"column_end":28,"is_primary":false,"text":[{"text":"        card_type: CardType,","highlight_start":9,"highlight_end":28}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\deck\\card.rs","byte_start":1661,"byte_end":1671,"line_start":58,"line_end":58,"column_start":9,"column_end":19,"is_primary":false,"text":[{"text":"        uuid: UUID,","highlight_start":9,"highlight_end":19}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\deck\\card.rs","byte_start":1681,"byte_end":1693,"line_start":59,"line_end":59,"column_start":9,"column_end":21,"is_primary":false,"text":[{"text":"        name: String,","highlight_start":9,"highlight_end":21}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\deck\\card.rs","byte_start":1703,"byte_end":1732,"line_start":60,"line_end":60,"column_start":9,"column_end":38,"is_primary":false,"text":[{"text":"        behavior_table: Vec<Behavior>,","highlight_start":9,"highlight_end":38}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\deck\\card.rs","byte_start":1742,"byte_end":1761,"line_start":61,"line_end":61,"column_start":9,"column_end":28,"is_primary":false,"text":[{"text":"        card_json: CardJson,","highlight_start":9,"highlight_end":28}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\deck\\card.rs","byte_start":1771,"byte_end":1783,"line_start":62,"line_end":62,"column_start":9,"column_end":21,"is_primary":false,"text":[{"text":"        count: usize,","highlight_start":9,"highlight_end":21}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\deck\\card.rs","byte_start":1793,"byte_end":1815,"line_start":63,"line_end":63,"column_start":9,"column_end":31,"is_primary":false,"text":[{"text":"        runner: Option<Runner>,","highlight_start":9,"highlight_end":31}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\deck\\card.rs","byte_start":1619,"byte_end":1622,"line_start":56,"line_end":56,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn new(","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"src\\card_gen\\card_gen.rs","byte_start":8049,"byte_end":8221,"line_start":260,"line_end":267,"column_start":18,"column_end":10,"is_primary":true,"text":[{"text":"        Card::new(","highlight_start":18,"highlight_end":19},{"text":"            CardType::Unit,","highlight_start":1,"highlight_end":28},{"text":"            uuid,","highlight_start":1,"highlight_end":18},{"text":"            \"Hieda no Akyuu\".into(),","highlight_start":1,"highlight_end":37},{"text":"            bvs,","highlight_start":1,"highlight_end":17},{"text":"            card_json.clone(),","highlight_start":1,"highlight_end":31},{"text":"            Some(run),","highlight_start":1,"highlight_end":23},{"text":"        )","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":"(CardType::Unit, uuid, \"Hieda no Akyuu\".into(), bvs, card_json.clone(), /* usize */, /* std::option::Option<std::rc::Rc<std::cell::RefCell<(dyn for<'a, 'b> FnMut(&'a card::Card, &'b mut game::game::Game) -> Result<(), exception::exception::Exception> + 'static)>>> */)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: this function takes 7 arguments but 6 arguments were supplied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\card_gen\\card_gen.rs:260:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m252\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m            |card: &Card, game: &mut Game| -> Result<(), Exception> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mthe found closure\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        Card::new(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m_________\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            CardType::Unit,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m262\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            uuid,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m263\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"Hieda no Akyuu\".into(),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m266\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Some(run),\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m267\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        )\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14man argument of type `std::option::Option<std::rc::Rc<std::cell::RefCell<(dyn for<'a, 'b> FnMut(&'a card::Card, &'b mut game::game::Game) -> Result<(), exception::exception::Exception> + 'static)>>>` is missing\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: expected `usize`, found enum `Option`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\card_gen\\card_gen.rs:266:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m266\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Some(run),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected type `\u001b[0m\u001b[0m\u001b[1musize\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m               found enum `\u001b[0m\u001b[0m\u001b[1mstd::option::Option<std::rc::Rc<std::cell::RefCell<[closure@src\\card_gen\\card_gen.rs:252:13: 252:68]>>>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\deck\\card.rs:56:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m56\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m57\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        card_type: CardType,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m58\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        uuid: UUID,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m59\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        name: String,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m60\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        behavior_table: Vec<Behavior>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m61\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        card_json: CardJson,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m62\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        count: usize,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m63\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        runner: Option<Runner>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        Card::new\u001b[0m\u001b[0m\u001b[38;5;10m(CardType::Unit, uuid, \"Hieda no Akyuu\".into(), bvs, card_json.clone(), /* usize */, /* std::option::Option<std::rc::Rc<std::cell::RefCell<(dyn for<'a, 'b> FnMut(&'a card::Card, &'b mut game::game::Game) -> Result<(), exception::exception::Exception> + 'static)>>> */)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"message":"aborting due to 2 previous errors; 3 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 2 previous errors; 3 warnings emitted\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0061`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0061`.\u001b[0m\n"}
