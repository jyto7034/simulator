{"message":"unused import: `super::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"tests\\test.rs","byte_start":12296,"byte_end":12304,"line_start":378,"line_end":378,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        use super::*;","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"tests\\test.rs","byte_start":12292,"byte_end":12305,"line_start":378,"line_end":378,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"        use super::*;","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `super::*`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mtests\\test.rs:378:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m378\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        use super::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `card`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"tests\\test.rs","byte_start":2656,"byte_end":2660,"line_start":92,"line_end":92,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"            let card =","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"tests\\test.rs","byte_start":2656,"byte_end":2660,"line_start":92,"line_end":92,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"            let card =","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":"_card","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `card`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mtests\\test.rs:92:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let card =\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_card`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `game`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"tests\\test.rs","byte_start":5646,"byte_end":5650,"line_start":178,"line_end":178,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"            let game = generate_game().unwrap();","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"tests\\test.rs","byte_start":5646,"byte_end":5650,"line_start":178,"line_end":178,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"            let game = generate_game().unwrap();","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":"_game","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `game`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mtests\\test.rs:178:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let game = generate_game().unwrap();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_game`\u001b[0m\n\n"}
{"message":"unused variable: `before_deck`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"tests\\test.rs","byte_start":11172,"byte_end":11183,"line_start":350,"line_end":350,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"                let before_deck = get_state!(ZoneType::DeckZone, &game);","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"tests\\test.rs","byte_start":11172,"byte_end":11183,"line_start":350,"line_end":350,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"                let before_deck = get_state!(ZoneType::DeckZone, &game);","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":"_before_deck","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `before_deck`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mtests\\test.rs:350:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m350\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let before_deck = get_state!(ZoneType::DeckZone, &game);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_before_deck`\u001b[0m\n\n"}
{"message":"unused variable: `player2`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"tests\\test.rs","byte_start":9812,"byte_end":9819,"line_start":309,"line_end":309,"column_start":55,"column_end":62,"is_primary":true,"text":[{"text":"                let map = if let (Some(player1), Some(player2)) = (&$game.player_1, &$game.player_2)","highlight_start":55,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"tests\\test.rs","byte_start":11186,"byte_end":11223,"line_start":350,"line_end":350,"column_start":35,"column_end":72,"is_primary":false,"text":[{"text":"                let before_deck = get_state!(ZoneType::DeckZone, &game);","highlight_start":35,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_state!","def_site_span":{"file_name":"tests\\test.rs","byte_start":9689,"byte_end":9711,"line_start":307,"line_end":307,"column_start":9,"column_end":31,"is_primary":false,"text":[{"text":"        macro_rules! get_state {","highlight_start":9,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"tests\\test.rs","byte_start":9812,"byte_end":9819,"line_start":309,"line_end":309,"column_start":55,"column_end":62,"is_primary":true,"text":[{"text":"                let map = if let (Some(player1), Some(player2)) = (&$game.player_1, &$game.player_2)","highlight_start":55,"highlight_end":62}],"label":null,"suggested_replacement":"_player2","suggestion_applicability":"MachineApplicable","expansion":{"span":{"file_name":"tests\\test.rs","byte_start":11186,"byte_end":11223,"line_start":350,"line_end":350,"column_start":35,"column_end":72,"is_primary":false,"text":[{"text":"                let before_deck = get_state!(ZoneType::DeckZone, &game);","highlight_start":35,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_state!","def_site_span":{"file_name":"tests\\test.rs","byte_start":9689,"byte_end":9711,"line_start":307,"line_end":307,"column_start":9,"column_end":31,"is_primary":false,"text":[{"text":"        macro_rules! get_state {","highlight_start":9,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `player2`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mtests\\test.rs:309:55\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m309\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let map = if let (Some(player1), Some(player2)) = (&$game.player_1, &$game.player_2)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_player2`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m350\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let before_deck = get_state!(ZoneType::DeckZone, &game);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `get_state` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"unused variable: `player2`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"tests\\test.rs","byte_start":9812,"byte_end":9819,"line_start":309,"line_end":309,"column_start":55,"column_end":62,"is_primary":true,"text":[{"text":"                let map = if let (Some(player1), Some(player2)) = (&$game.player_1, &$game.player_2)","highlight_start":55,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"tests\\test.rs","byte_start":11348,"byte_end":11385,"line_start":354,"line_end":354,"column_start":42,"column_end":79,"is_primary":false,"text":[{"text":"                        let after_hand = get_state!(ZoneType::HandZone, &game);","highlight_start":42,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_state!","def_site_span":{"file_name":"tests\\test.rs","byte_start":9689,"byte_end":9711,"line_start":307,"line_end":307,"column_start":9,"column_end":31,"is_primary":false,"text":[{"text":"        macro_rules! get_state {","highlight_start":9,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"tests\\test.rs","byte_start":9812,"byte_end":9819,"line_start":309,"line_end":309,"column_start":55,"column_end":62,"is_primary":true,"text":[{"text":"                let map = if let (Some(player1), Some(player2)) = (&$game.player_1, &$game.player_2)","highlight_start":55,"highlight_end":62}],"label":null,"suggested_replacement":"_player2","suggestion_applicability":"MachineApplicable","expansion":{"span":{"file_name":"tests\\test.rs","byte_start":11348,"byte_end":11385,"line_start":354,"line_end":354,"column_start":42,"column_end":79,"is_primary":false,"text":[{"text":"                        let after_hand = get_state!(ZoneType::HandZone, &game);","highlight_start":42,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_state!","def_site_span":{"file_name":"tests\\test.rs","byte_start":9689,"byte_end":9711,"line_start":307,"line_end":307,"column_start":9,"column_end":31,"is_primary":false,"text":[{"text":"        macro_rules! get_state {","highlight_start":9,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `player2`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mtests\\test.rs:309:55\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m309\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let map = if let (Some(player1), Some(player2)) = (&$game.player_1, &$game.player_2)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_player2`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        let after_hand = get_state!(ZoneType::HandZone, &game);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `get_state` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"unused variable: `player2`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"tests\\test.rs","byte_start":9812,"byte_end":9819,"line_start":309,"line_end":309,"column_start":55,"column_end":62,"is_primary":true,"text":[{"text":"                let map = if let (Some(player1), Some(player2)) = (&$game.player_1, &$game.player_2)","highlight_start":55,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"tests\\test.rs","byte_start":11432,"byte_end":11469,"line_start":355,"line_end":355,"column_start":46,"column_end":83,"is_primary":false,"text":[{"text":"                        let mut after_deck = get_state!(ZoneType::DeckZone, &game);","highlight_start":46,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_state!","def_site_span":{"file_name":"tests\\test.rs","byte_start":9689,"byte_end":9711,"line_start":307,"line_end":307,"column_start":9,"column_end":31,"is_primary":false,"text":[{"text":"        macro_rules! get_state {","highlight_start":9,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"tests\\test.rs","byte_start":9812,"byte_end":9819,"line_start":309,"line_end":309,"column_start":55,"column_end":62,"is_primary":true,"text":[{"text":"                let map = if let (Some(player1), Some(player2)) = (&$game.player_1, &$game.player_2)","highlight_start":55,"highlight_end":62}],"label":null,"suggested_replacement":"_player2","suggestion_applicability":"MachineApplicable","expansion":{"span":{"file_name":"tests\\test.rs","byte_start":11432,"byte_end":11469,"line_start":355,"line_end":355,"column_start":46,"column_end":83,"is_primary":false,"text":[{"text":"                        let mut after_deck = get_state!(ZoneType::DeckZone, &game);","highlight_start":46,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"get_state!","def_site_span":{"file_name":"tests\\test.rs","byte_start":9689,"byte_end":9711,"line_start":307,"line_end":307,"column_start":9,"column_end":31,"is_primary":false,"text":[{"text":"        macro_rules! get_state {","highlight_start":9,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `player2`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mtests\\test.rs:309:55\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m309\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let map = if let (Some(player1), Some(player2)) = (&$game.player_1, &$game.player_2)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_player2`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m355\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        let mut after_deck = get_state!(ZoneType::DeckZone, &game);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `get_state` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"unused variable: `player1`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"tests\\test.rs","byte_start":11782,"byte_end":11789,"line_start":362,"line_end":362,"column_start":35,"column_end":42,"is_primary":true,"text":[{"text":"                            (Some(player1), Some(player2)) => {","highlight_start":35,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"tests\\test.rs","byte_start":11782,"byte_end":11789,"line_start":362,"line_end":362,"column_start":35,"column_end":42,"is_primary":true,"text":[{"text":"                            (Some(player1), Some(player2)) => {","highlight_start":35,"highlight_end":42}],"label":null,"suggested_replacement":"_player1","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `player1`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mtests\\test.rs:362:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m362\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m                   (Some(player1), Some(player2)) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_player1`\u001b[0m\n\n"}
{"message":"unused variable: `player2`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"tests\\test.rs","byte_start":11797,"byte_end":11804,"line_start":362,"line_end":362,"column_start":50,"column_end":57,"is_primary":true,"text":[{"text":"                            (Some(player1), Some(player2)) => {","highlight_start":50,"highlight_end":57}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"tests\\test.rs","byte_start":11797,"byte_end":11804,"line_start":362,"line_end":362,"column_start":50,"column_end":57,"is_primary":true,"text":[{"text":"                            (Some(player1), Some(player2)) => {","highlight_start":50,"highlight_end":57}],"label":null,"suggested_replacement":"_player2","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `player2`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mtests\\test.rs:362:50\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m362\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m                   (Some(player1), Some(player2)) => {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_player2`\u001b[0m\n\n"}
{"message":"9 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: 9 warnings emitted\u001b[0m\n\n"}
